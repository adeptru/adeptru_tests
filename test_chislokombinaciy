#а (1): а (1)
#
#а, б (2): а, б, аб, ба (4)
#
#а, б, в (3): а, б, в, аб, ав, ба, бв, ва, вб, абв, авб, бав, бва, ваб, вба (15)
#
#а, б, в, г (4): а, б, в, г, аб, ав, аг, ба, бв, бг, ва, вб, вг, га, гб, гв, абв, авб, абг, агб, авг, агв, бав, бва, баг, бга, бвг, 
#бгв, ваб, вба, вбг, вгб, ваг, вга, габ, гба, гбв, гвб, гав, гва, абвг, абгв, авбг, авгб, агбв, агвб, бавг, багв, бваг, бвга, бгав, 
#бгва, вабг, вагб, вбаг, вбга, вгаб, вгба, габв, гавб, гбав, гбва, гваб, гвба (64)
#
#а, б, в, г, д (5): а, б, в, г, д, аб, ав, аг, ад, ба, бв, бг, бд, ва, вб, вг, вд, га, гб, гв, гд, да, дб, дв, дг, абв, авб, абг, 
#агб, авг, агв, адб, абд, адв, авд, адг, агд, бав, бва, баг, бга, бад, бда, бвг, бгв, бвд, бдв, бгд, бдг, ваб, вба, вбг, вгб, вгд, 
#вдг, ваг, вга, вад, вда, вбд, вдб, габ, гба, гбв, гвб, гав, гва, гвд, гдв, гад, гда, гбд, гдб, даб, дба, дав, два, даг, дга, дбв, 
#двб, дбг, дгб, двг, дгв, абвг, абгв, авбг, авгб, агбв, агвб, адбв, адвб, адбг, адгб, адвг, адгв, бавг, багв, бваг, бвга, бгав, 
#бгва, бгад, бгда, бдав, бдва, бдаг, бдга, вабг, вагб, вбаг, вбга, вгаб, вгба, вабд, вадб, вбгд, вбдг, вгбд, вгдб, габв, гавб, 
#гбав, гбва, гваб, гвба, габд, гадб, гавд, гадв, гбвд, гбдв, абвгд, абвдг, абдвг, абгвд, абгдв, абдгв, авбгд, авбдг, авдбг, авгбд, 
#авгдб, авбгд, агбвд, агбдв, агдбв, агвбд, агвдб, агдвб, адбвг, адбгв, адгбв, адгвб, адвбг, адвгб, бавгд, бавдг, бадвг, бадгв, 
#багвд, багдв, вабгд, вабдг, вадбг, вадгб, вагбд, вагдб, габвд, габдв, гадбв, гадвб, гавбд, гавдб, дабвг, дабгв, дагбв, дагвб, 
#давгб, давбг, бвагд, бвадг, бвдаг, бвдга, бвгда, бвгад, бгавд, бгадв, бгдав, бгдва, бгвад, бгвда, бдавг, бдагв, бдгав, бдгва, 
#бдваг, бдвга, вбагд, вбадг, вбдаг, вбдга, вбгад, вбгда, вгабд, вгадб, вгдаб, вгдба, вгбад, вгбда, вдабг, вдагб, вдгаб, вдгба, 
#вдбаг, вдбга, гбавд, гбадв, гбдав, гбдва, гбвад, гбвда, гвабд, гвадб, гвдаб, гвдба, гвбад, гвбда, гдабв, гдавб, гдваб, гдвба, 
#гдбав, гдбва, дбавг, дбагв, дбгав, дбгва, дбваг, дбвга, двабг, двагб, двгаб, двгба, двбаг, двбга, дгабв, дгавб, дгбав, дгбва, 
#дгваб, дгвба (253)
#
#...
#
#а (1) (S=1*1)
#
#аб, ба (2) (S=2*1)
#
#абв, авб, бав, бва, ваб, вба (6) (S=3*2)
#
#абвг, абгв, авбг, авгб, агбв, агвб, бавг, багв, бваг, бвга, бгав, бгва, вабг, вагб, вбаг, вбга, вгаб, вгба, габв, гавб, гбав, 
#гбва, гваб, гвба (24) (S=4*6)
#
#абвгд, абвдг, абдвг, абгвд, абгдв, абдгв, авбгд, авбдг, авдбг, авгбд, авгдб, авбгд, агбвд, агбдв, агдбв, агвбд, агвдб, агдвб, 
#адбвг, адбгв, адгбв, адгвб, адвбг, адвгб, бавгд, бавдг, бадвг, бадгв, багвд, багдв, вабгд, вабдг, вадбг, вадгб, вагбд, вагдб, 
#габвд, габдв, гадбв, гадвб, гавбд, гавдб, дабвг, дабгв, дагбв, дагвб, давгб, давбг, бвагд, бвадг, бвдаг, бвдга, бвгда, бвгад, 
#бгавд, бгадв, бгдав, бгдва, бгвад, бгвда, бдавг, бдагв, бдгав, бдгва, бдваг, бдвга, вбагд, вбадг, вбдаг, вбдга, вбгад, вбгда, 
#вгабд, вгадб, вгдаб, вгдба, вгбад, вгбда, вдабг, вдагб, вдгаб, вдгба, вдбаг, вдбга, гбавд, гбадв, гбдав, гбдва, гбвад, гбвда, 
#гвабд, гвадб, гвдаб, гвдба, гвбад, гвбда, гдабв, гдавб, гдваб, гдвба, гдбав, гдбва, дбавг, дбагв, дбгав, дбгва, дбваг, дбвга, 
#двабг, двагб, двгаб, двгба, двбаг, двбга, дгабв, дгавб, дгбав, дгбва, дгваб, дгвба (120) (S=5*24) => if (l=6) then S=l*120 - ???
#
#Увеличение кол-ва букв на одну, увеличивает кол-во комбинаций букв:
#2-значных - S=l*(l-1) ...while l>=2;
#3-значных - if l==3 S=6 w3l=S elif l==4 S=l*w3l elif l==5 S=2l*w3l ...

#Кол-во комбинаций букв, когда они состоят ТОЛЬКО из заявленного кол-ва букв:

l=int(input('Введите кол-во букв: '))
a=1
S=1
while a <= l:
    S=a*S
    a+=1
S2l=l*(l-1)
print('кол-во комбинаций - '+str(S))
print('...из них двузначных - '+str(S2l))
